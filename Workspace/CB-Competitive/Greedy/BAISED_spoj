#include <iostream>
#include <string>
using namespace std;


///BAISED QUESTION ON SPOJ -> O(N) approach(countng sort approach)
//can alsp be done by greedy->for that we first sort the array accn to preffered rank and then subtract the actual rank and sum the differences and this works in 0(nlogn)time
int main() {
    int testcases;cin>>testcases;
    while(testcases--){
        int n;cin>>n;pair<string,int> arr[n+1];
        for(int i=1;i<=n;i++){
            cin>>arr[i].first>>arr[i].second;
        }
        int frequency[n+1]{0};
        for(int i=1;i<=n;i++){
            frequency[arr[i].second]++;
        }
        for(int i=1;i<=n;i++){
            cout<<arr[i].second<<" ";
        }
        cout<<endl;
        for(int i=1;i<=n;i++){
            cout<<frequency[i]<<" ";
        }
        cout<<endl;
        int badness=0;
        for(int i=1,j=1;i<n;){
            int reduce=j;
            while(frequency[j]!=0){
                badness+=i-reduce;
                frequency[j]--;
                i++;
            }
            j++;
        }
        cout<<badness<<endl;
    }
    return 0;
}

